name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: pnpm
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.12.4
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run tests
      run: pnpm test:coverage
      
    - name: Build Docker image
      run: pnpm build
      
    - name: Generate changelog
      id: changelog
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/}
        
        # Generate changelog from commits since last tag
        CHANGELOG=$(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD)
        
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.changelog.outputs.version }}
        release_name: Release ${{ steps.changelog.outputs.version }}
        body: |
          ## Changes in this release
          
          ${{ steps.changelog.outputs.changelog }}
          
          ## Installation
          
          ```bash
          pnpm install
          ```
          
          ## Usage
          
          ```bash
          pnpm start
          ```
        draft: false
        prerelease: false
        
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Dockerfile
        asset_name: Dockerfile
        asset_content_type: text/plain
        
    - name: Notify team
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const version = '${{ steps.changelog.outputs.version }}';
          
          // Create a discussion post about the release
          await github.rest.discussions.create({
            owner,
            repo,
            category_id: 1, // You'll need to replace this with your actual category ID
            title: `Release ${version} is now available`,
            body: `ðŸŽ‰ Release ${version} has been published!
            
            Check out the [release notes](https://github.com/${owner}/${repo}/releases/tag/${version}) for details.
            
            Key changes:
            ${{ steps.changelog.outputs.changelog }}
            `
          }); 