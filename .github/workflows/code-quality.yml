name: Code Quality

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
  schedule:
    - cron: '0 3 * * 0'  # Every Sunday at 3 AM

jobs:
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.13.1
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: pnpm
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run ESLint
      run: pnpm lint
      
    - name: Check for TODO comments
      run: |
        echo "Checking for TODO comments..."
        if grep -r "TODO" . --exclude-dir=node_modules --exclude-dir=.git --exclude=*.md; then
          echo "Found TODO comments. Please address them before merging."
          exit 1
        fi
        
    - name: Check for console.log statements
      run: |
        echo "Checking for console.log statements..."
        if grep -r "console\.log" . --exclude-dir=node_modules --exclude-dir=.git --exclude=*.md --exclude=*.test.js; then
          echo "Found console.log statements in production code. Please remove them."
          exit 1
        fi
        
    - name: Check file sizes
      run: |
        echo "Checking for large files..."
        find . -name "*.js" -not -path "./node_modules/*" -not -path "./.git/*" -size +100k -exec echo "Large file found: {}" \;
        
    - name: Run dependency analysis
      run: |
        echo "Analyzing dependencies..."
        pnpm list --depth=0
        pnpm audit --audit-level moderate
        
    - name: Check for security vulnerabilities
      run: |
        echo "Checking for known vulnerabilities..."
        pnpm audit --audit-level moderate || {
          echo "Security vulnerabilities found. Please review and fix."
          exit 1
        }
        
    - name: Generate complexity report
      run: |
        echo "Generating complexity report..."
        npx complexity-report --output complexity-report.json . || echo "Complexity report generation failed"
        
    - name: Upload complexity report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: complexity-report
        path: complexity-report.json
        retention-days: 30
        
    - name: Comment on PR
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          
          let complexityData = {};
          try {
            complexityData = JSON.parse(fs.readFileSync('./complexity-report.json', 'utf8'));
          } catch (e) {
            console.log('No complexity report available');
          }
          
          const comment = `## Code Quality Check Results
          
          âœ… **ESLint**: Passed
          âœ… **TODO Check**: Passed
          âœ… **Console.log Check**: Passed
          âœ… **Security Audit**: Passed
          
          ${complexityData.summary ? `ðŸ“Š **Complexity**: ${complexityData.summary.averageComplexity.toFixed(2)} average complexity` : ''}
          
          All code quality checks passed! ðŸŽ‰
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          }); 